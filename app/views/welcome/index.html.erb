<div data-role="page" id="main" style="background: black;">

<script>
  var pagination = ['/'];
  var currentpage = 0;
</script>

  <div data-role="header" data-position="fixed">

    <h1><%= image_tag '/images/logo.png' %></h1>

  </div>

  <div id="timers" data-role="content" class="ui-grid-a ui-content ui-sortable" role="main">
    Loading ...
  </div>
</div><!-- /page -->


<%= render partial: 'welcome/reports', locals: {reposrts: @reports} %>

<script id="timerTemplate" type="text/x-jquery-tmpl">
  <div id="${id}" class="{{if alternate}}ui-block-b{{else}}ui-block-a{{/if}} timer-container ${active}" data-id="${id}" data-et="${elapsed_time}" data-label="${label}" data-icon="${icon}">
    <div class="timer" style="background-color:${color};">
      <div class="label">${label}</div>
      <div class="elapsed_time">${elapsed_time_text}</div>
      <div class="icon" style="background:transparent url(${icon}) center center no-repeat"></div>
    </div>
  </div>
</script>

<script>
  
  
  /**
   * Convert number of seconds into time object
   *
   * @param integer secs Number of seconds to convert
   * @return object
   */
  function secondsToTime(secs)
  {
  	var hours = Math.floor(secs / (60 * 60));

  	var divisor_for_minutes = secs % (60 * 60);
  	var minutes = Math.floor(divisor_for_minutes / 60);

  	var divisor_for_seconds = divisor_for_minutes % 60;
  	var seconds = Math.ceil(divisor_for_seconds);

  	var obj = {
  		"h": hours,
  		"m": minutes,
  		"s": seconds
  	};
  	return obj;
  }

  function returnTime(secs){
    var obj = secondsToTime(secs);

    var time = '';
    
    if(obj.h){
      time += obj.h + 'h ';
    }
    
    if(obj.m){
      time += obj.m + 'm ';
    }
    
    if(obj.h == 0 && obj.m == 0){
      time += obj.s + 's ';
    }

    
    return time;
  }

  $(function() {

    var timers = [];
    var c = 0;
    <% current_user.timers.each do |timer| %>
      var timer = {
        id: '<%= timer.id %>',
        label: '<%= timer.label %>',
        icon: '<%= timer.icon %>',
        color: '<%= timer.color %>',
        elapsed_time: parseInt(<%= timer.elapsed_time %>),
        elapsed_time_text: returnTime(parseInt(<%= timer.elapsed_time %>)),
        active: '<% if ( timer.active? ) %>active<% end %>',
        alternate: c % 2
      }
      c++;
      timers.push(timer);
    <% end %>

    $('#timers').html($('#timerTemplate').tmpl(timers));

    $('.timer-container').click(function(){

      if( !$(this).hasClass('active') ){
        toggleMe(this);
        $(this).addClass('active current');
      }

      $('.timer-container.active').not('.current').each(function(){
        toggleMe(this);
        $(this).removeClass('active');
      });

      $('.timer-container.active.current').removeClass('current');

    });
    
    $.event.special.swipe.horizontalDistanceThreshold = 130;
    
    $( document ).bind( "swipeleft", function( event, data ){
      
      if(currentpage < pagination.length)
        currentpage++;
        
      $.mobile.changePage( pagination[currentpage], { transition: "slide"} );
      
    }).bind( "swiperight", function( event, data ){
      
      if(currentpage > 0)
        currentpage--;
      
      $.mobile.changePage( pagination[currentpage], { transition: "slide", reverse:true} );
    
    });

  });

  function toggleMe(obj){
    $.ajax({
      type: 'PUT',
      url: "/timers/" + $(obj).data('id') + '.js'
    });
  }

  setInterval(updateTimers,1000);
  function updateTimers(){
    $('.timer-container.active').each(function(){
      var et = parseInt($(this).data('et'));

      $(this).data('et', ++et);
      $(this).find('.elapsed_time').html(returnTime(et));
    });
  }
</script>
